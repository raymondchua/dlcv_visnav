## Meeting Fr, 14.07.17

1.Image Conversion
- converted RGB images into YUV images
- use tf.uint8 to convert YUV to integer values (python uint8 cast does not work correctly)
- saved exemplary images to files using the python image library for plausability check

2.Network changes
- added random shuffle to batch selection
- changed batch size to prevent memory errors
- added kernel regularizer for weight decay
- added exponential learning rate decay

3.Network evaluation
- saved checkpoint data into .ckpt files
- saved loss and learning rate into event file for analysis with tensorboard

4.Optical flow
- converted all image names to beginn with zeros
- tried to load image sequence via cv2.VideoCapture: when specifying any filename to open, the whole python crashes with an uncaught exception -> load images manually after one another with cv2.imread
- generated the optical flow images for the training data using Lucas-Kanade Optical Flow with tracking features detected by Shi-Tomasi
- Questions to be determined:
	1. do we want only the differences between to consecutive frames or
	2. do we want the whole change beginning from first image unit last image (generating a line)
- Problems: script gets really slow after approx. 184 images